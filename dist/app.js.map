{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";;;;;;AAAA,sDAAqD;AASrD,6BAA6B;AAChB,QAAA,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AAC7B,WAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,4BAA4B;AAQrD,MAAM,EAAE,GAA8B;IAClC,OAAO,EAAE;QACL,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,aAAa,EAAE,EAAE,EAAE;QAChD,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,aAAa,EAAE,EAAE,EAAE;QAC/C,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,aAAa,EAAE,EAAE,EAAE;QACpD,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,EAAE,EAAE;KAChD;CACJ,CAAA;AAED,MAAM,kBAAkB,GAAG,CAAC,QAAoB,EAAmB,EAAE;IACjE,OAAO;QACH,EAAE,EAAE,QAAQ,CAAC,EAAE;QACf,KAAK,EAAE,QAAQ,CAAC,KAAK;QACrB,aAAa,EAAE,QAAQ,CAAC,aAAa;KACxC,CAAA;AACL,CAAC,CAAA;AAEY,QAAA,aAAa,GAAG;IACzB,MAAM,EAAE,GAAG;IACX,WAAW,EAAE,GAAG;IAChB,cAAc,EAAE,GAAG;IACnB,eAAe,EAAE,GAAG;IACpB,aAAa,EAAE,GAAG;CACrB,CAAA;AAED,WAAG,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,GAA2C,EAC5D,GAAgC,EAAE,EAAE;IACpC,IAAI,YAAY,GAAG,EAAE,CAAC,OAAO,CAAC;IAE9B,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAClB,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnF,CAAC;IAED,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;QACjC,OAAO;YACH,EAAE,EAAE,QAAQ,CAAC,EAAE;YACf,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,aAAa,EAAE,QAAQ,CAAC,aAAa;SACxC,CAAA;IACL,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC;AAGH,WAAG,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,GAA8C,EACnE,GAA8B,EAAE,EAAE;IAClC,MAAM,WAAW,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;IAEjE,IAAI,CAAC,WAAW,EAAE,CAAC;QACf,GAAG,CAAC,UAAU,CAAC,qBAAa,CAAC,aAAa,CAAC,CAAA;QAC3C,OAAM;IACV,CAAC;IACD,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC,CAAA;AAC7C,CAAC,CAAC,CAAA;AAMF,WAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,GAA4C,EAC9D,GAAyB,EAAE,EAAE;IAC7B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,GAAG,CAAC,UAAU,CAAC,qBAAa,CAAC,eAAe,CAAC,CAAA;QAC7C,OAAO;IACX,CAAC;IACD,MAAM,aAAa,GAAe;QAC9B,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;QACjB,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;QACrB,aAAa,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK;KACjC,CAAA;IACD,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IAEhC,GAAG;SACF,MAAM,CAAC,qBAAa,CAAC,WAAW,CAAC;SACjC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC,CAAA;AAC1C,CAAC,CAAC,CAAA;AAGF,WAAG,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,GAAwE,EAC7F,GAAG,EAAE,EAAE;IACP,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,GAAG,CAAC,UAAU,CAAC,qBAAa,CAAC,eAAe,CAAC,CAAA;QAC7C,OAAO;IACX,CAAC;IAED,MAAM,WAAW,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;IACjE,IAAI,CAAC,WAAW,EAAE,CAAC;QACf,GAAG,CAAC,UAAU,CAAC,qBAAa,CAAC,aAAa,CAAC,CAAA;QAC3C,OAAO;IACX,CAAC;IAED,WAAW,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IAEnC,GAAG,CAAC,UAAU,CAAC,qBAAa,CAAC,cAAc,CAAC,CAAA;AAChD,CAAC,CAAC,CAAA;AAEF,WAAG,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,GAA8C,EAAE,GAAG,EAAE,EAAE;IAC9E,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;IAE5D,GAAG,CAAC,UAAU,CAAC,qBAAa,CAAC,cAAc,CAAC,CAAA;AAChD,CAAC,CAAC,CAAA;AAEF,WAAG,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACtC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC;IAChB,GAAG,CAAC,UAAU,CAAC,qBAAa,CAAC,cAAc,CAAC,CAAC;AACjD,CAAC,CAAC,CAAA;AAEF,uCAAuC;AACvC,qFAAqF","sourcesContent":["import express, { Request, Response } from 'express';\r\nimport { RequestWithBody, RequestWithParams, RequestWithParamsAndBody, RequestWithQuery } from './types';\r\nimport { CourseCreateInputModel } from './models/CreateCoursesModel';\r\nimport { UpdateCourseModel } from './models/UpdateCoursesModel';\r\nimport { GetCoursesQueryModel } from './models/QueryCoursesModel';\r\nimport { CourseViewModel } from './models/CourseViewModel';\r\nimport { URIParamsCourseIDModel } from './models/URIParamsCourseIDModel'\r\nimport { title } from 'process';\r\n\r\n// Создаем приложение express\r\nexport const app = express();\r\napp.use(express.json()); // Для обработки JSON данных\r\n\r\ntype CourseType = {\r\n    id: number,\r\n    title: string,\r\n    studentsCount: number\r\n}\r\n\r\nconst db: { courses: CourseType[] } = {\r\n    courses: [\r\n        { id: 1, title: 'front-end', studentsCount: 10 },\r\n        { id: 2, title: 'back-end', studentsCount: 10 },\r\n        { id: 3, title: 'automation qa', studentsCount: 10 },\r\n        { id: 4, title: 'devops', studentsCount: 10 }\r\n    ]\r\n}\r\n\r\nconst getCourseViewModel = (dbCourse: CourseType): CourseViewModel => {\r\n    return {\r\n        id: dbCourse.id,\r\n        title: dbCourse.title,\r\n        studentsCount: dbCourse.studentsCount\r\n    }\r\n}\r\n\r\nexport const HTTP_STATUSES = {\r\n    OK_200: 200,\r\n    CREATED_201: 201,\r\n    NO_CONTENT_204: 204,\r\n    BAD_REQUEST_400: 400,\r\n    NOT_FOUND_404: 404\r\n}\r\n\r\napp.get('/courses', (req: RequestWithQuery<GetCoursesQueryModel>,\r\n    res: Response<CourseViewModel[]>) => {\r\n    let foundCourses = db.courses;\r\n\r\n    if (req.query.title) {\r\n        foundCourses = foundCourses.filter(c => c.title.indexOf(req.query.title) > -1);\r\n    }\r\n\r\n    res.json(foundCourses.map(dbCourse => {\r\n        return {\r\n            id: dbCourse.id,\r\n            title: dbCourse.title,\r\n            studentsCount: dbCourse.studentsCount\r\n        }\r\n    }));\r\n});\r\n\r\n\r\napp.get('/courses/:id', (req: RequestWithParams<URIParamsCourseIDModel>,\r\n    res: Response<CourseViewModel>) => {\r\n    const foundCourse = db.courses.find(c => c.id === +req.params.id)\r\n\r\n    if (!foundCourse) {\r\n        res.sendStatus(HTTP_STATUSES.NOT_FOUND_404)\r\n        return\r\n    }\r\n    res.json(getCourseViewModel(foundCourse))\r\n})\r\n\r\n\r\n\r\n\r\n\r\napp.post('/courses', (req: RequestWithBody<CourseCreateInputModel>,\r\n    res: Response<CourseType>) => {\r\n    if (!req.body.title) {\r\n        res.sendStatus(HTTP_STATUSES.BAD_REQUEST_400)\r\n        return;\r\n    }\r\n    const createdCourse: CourseType = {\r\n        id: +(new Date()),\r\n        title: req.body.title,\r\n        studentsCount: +req.body.title\r\n    }\r\n    db.courses.push(createdCourse)\r\n\r\n  res\r\n  .status(HTTP_STATUSES.CREATED_201)\r\n  .json(getCourseViewModel(createdCourse))\r\n})\r\n\r\n\r\napp.put('/courses/:id', (req: RequestWithParamsAndBody<URIParamsCourseIDModel, UpdateCourseModel>,\r\n    res) => {\r\n    if (!req.body.title) {\r\n        res.sendStatus(HTTP_STATUSES.BAD_REQUEST_400)\r\n        return;\r\n    }\r\n\r\n    const foundCourse = db.courses.find(c => c.id === +req.params.id)\r\n    if (!foundCourse) {\r\n        res.sendStatus(HTTP_STATUSES.NOT_FOUND_404)\r\n        return;\r\n    }\r\n\r\n    foundCourse.title = req.body.title;\r\n\r\n    res.sendStatus(HTTP_STATUSES.NO_CONTENT_204)\r\n})\r\n\r\napp.delete('/corses/:id', (req: RequestWithParams<URIParamsCourseIDModel>, res) => {\r\n    db.courses = db.courses.filter(c => c.id !== +req.params.id)\r\n\r\n    res.sendStatus(HTTP_STATUSES.NO_CONTENT_204)\r\n})\r\n\r\napp.delete('/__test__/data', (req, res) => {\r\n    db.courses = [];\r\n    res.sendStatus(HTTP_STATUSES.NO_CONTENT_204);\r\n})\r\n\r\n//разобраться с апп, 1 ошибку оставляет\r\n// × should not update course with incorrect input data (10 ms)                      "]}